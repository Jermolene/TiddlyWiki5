title: $:/core/ui/PageTemplate/modals
tags: $:/tags/PageTemplate
list-after: 
created: 20230214123242192
modified: 20230215183342466

\whitespace trim

\define close-current-modal()
<$action-listops $tiddler="$:/state/modal" $field="text" $filter="[enlist:raw{$:/state/modal}butlast[]]" />
<!-- Delete paramObject tiddler -->
<$action-deletetiddler $tiddler={{{ [[$:/state/modal/paramObject/]addsuffix<modalCounter>] }}} />
\end

\define tm-close-handler()
<!-- Close the modal unless a different tiddler was given in the message parameter -->
<$let currentModal={{{ [enlist:raw{$:/state/modal}last[]] }}} >
<$list filter="[<event-param>!is[blank]!match<currentModal>]" emptyMessage=<<close-current-modal>> >
<$action-sendmessage $message="tm-close-tiddler" />
</$list>
</$let>
\end

\define tm-modal-handler()
<$action-listops $tiddler="$:/state/modal" $field="text" $filter="[enlist:raw{$:/state/modal}] :all[<event-param>]" />
<!-- Store the paramObject hashmap to set variables inside the modal -->
<$let targetCount={{{ [<modalCounter>!is[blank]else[0]add[1]] }}}>
<$action-setmultiplefields $tiddler={{{ [[$:/state/modal/paramObject/]addsuffix<targetCount>] }}}
		  				   $indexes="[enlist<list-event-paramObject>]"
						   $values="[enlist<list-event-paramObject>addprefix[event-paramObject-]getvariable[]]" />
</$let>
\end

<style>
.tc-modal-footer {
	display: flex;
}
.tc-modal-footer > span:last-of-type {
	flex-grow: 1;
}

</style>

<!-- Do we have a list of modals to display in the state tiddler? -->
<$reveal stateTitle="$:/state/modal" stateField="text" type="nomatch" text="" tag="div" class="tc-modal-wrapper">
<$navigator story=<<tv-story-list>>
            history=<<tv-history-list>>
			openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} >
	<!-- Show all modal tiddlers in the order they are listed in the state tiddler -->
	<$list filter="[enlist:raw{$:/state/modal}]" variable="currentModal" counter="modalCounter" >
	<!-- We need special handling for tm-close-tiddler and tm-modal from inside the modal (the latter to be handled by the core eventually) -->
	<$messagecatcher $tm-close-tiddler=<<tm-close-handler>> $tm-modal=<<tm-modal-handler>> >
	<!-- Retrieve the paramObject hashmap in case a modal was called with it -->
	<$setmultiplevariables $names="[[$:/state/modal/paramObject/]addsuffix<modalCounter>indexes[]]" $values="[[$:/state/modal/paramObject/]addsuffix<modalCounter>indexes[]getindex[]]">
	<!-- Implements mask-closable (only checks for "yes") -->
	<$eventcatcher $click={{{ [<currentModal>get[mask-closable]match[yes]then<close-current-modal>] }}} selector=".tc-modal-backdrop" matchSelector=".tc-modal-backdrop" tag="div">
	<!-- Display modal content -->
	<div class="tc-modal-backdrop">
		<div class={{{ [[tc-modal]] [<currentModal>get[class]!is[blank]] +[join[ ]] }}}>
			<$list filter="[<currentModal>get[subtitle]!is[blank]]" variable="subtitle">
				<div class="tc-modal-header">
					<h3><<subtitle>></h3>
				</div>
			</$list>
			<div class="tc-modal-body">
				<$transclude tiddler=<<currentModal>> mode="block"/>
			</div>
			<div class="tc-modal-footer">
				<$list filter="[<currentModal>get[help]!is[blank]]" variable="help">
					<span>
						<a href=<<help>> target="_blank" rel="noopener noreferrer">Help</a>
					</span>
				</$list>
				<span>
					<$transclude tiddler=<<currentModal>> field="footer">
						<$button actions=<<close-current-modal>> ><$text text={{$:/language/Buttons/Close/Caption}}/></$button>
					</$transclude>
				</span> 
			</div>
		</div>
	</div>
	</$eventcatcher>
	</$setmultiplevariables>
	</$messagecatcher>
	</$list>
</$navigator>
</$reveal>
