created: 20140717174307709
modified: 20140717181543163
tags: [[User Interface]]
toc-order: 3
title: Widget

Once the WikiText has been transformed into a parsetree by the [[Parser]] the next step is to transform this parse-tree into a widget-tree.

Each node of the parsetree is transformed into a widget object.

The [[Core Plugin]] provides a basic widget object which gets the parse node it should represent and a DOM node. The widget must then create the DOM structure which represents the parsetree node and add it to the provided DOM node.
A ~LinkWidget for example would create the DOM node for a ``<a>...</a>`` tag and put it in the provided DOM node.
When a widget gets a parse node with child nodes it must create the corresponding child widgets.

All this functionality provided with the base widget. But when creating the widget for a parse node it loads additional modules with ``module-type: widget``. These modules can export multiple widgets which extend the base widget and can override it's methods like the rendering and refresh functions.
As described in [[Parser]] each parse node contains a "type" property. This type directly determines which widget module is used.

```js
{
    type: "text", 
    text: <string>
} - a text node
```

Would be transformed to a [[TextWidget|$:/core/modules/widgets/text.js]].
(Note that the ~TextWidget module exports a property "text".)

This means that widgets in WikiText are not actually a feature added to WikiText but instead a specific widget used directly, instead of the parser choosing a widget type.

In the beginning we talked about widgets and how they enable dynamic behaviour. But up until now we only described how widgets create DOM nodes from parse nodes.
Widgets add dynamic behaviour in two ways: [[Messages]] and [[Selective Update]].


