created: 20140709110225227
modified: 20140717213309369
tags: Microkernel
toc-order: 1
title: Microkernel Description

In the universe of TiddlyWiki everything is a tiddler.
Even the application logic is stored in tiddlers that are marked as "application/javascript".
These tiddlers containing application logic are called modules, and a ~CommonJS compatible module system is responsible for assembling them into the TiddlyWiki application.
The result is a tree representing the whole TiddlyWiki application containing module tiddlers, data tiddlers and some ~JavaScript functions and objects.

Only a small part of the TiddlyWiki is not managed as tiddlers: The microkernel.
The microkernel is the first thing to run when the application is started and it puts some initial objects and functions into the application tree which are needed to load and manage tiddlers.

After the microkernel has built this initial application tree, the remaining parts of the application can be loaded as module tiddlers.

Besides some utility functions, the most important object that is provided by the boot kernel is the object `$tw.wiki`, consisting of ~JavaScript structures and functions that are used to store and manage the loaded tiddlers. Among other things, this "store" can be used to add new tiddlers, remove tiddlers and retrieve tiddlers by name.

<<<
{{apptree.svg}}
<<< The microkernel constructs a initial $tw object containing the needed structures and functions.


An additional feature of the microkernel is the ability to encrypt and decrypt a block of text. To provide this functionality the microkernel has a built in password-vault to store the current used password. The library used to encrypt and decrypt data is the [[StandfordJavaScript Crypto Libary|http://bitwiseshiftleft.github.io/sjcl/]]. This feature allows the micro-kernel to load encrypted tiddlers from the TiddlyWiki file, but it also allows extension plug-ins to use the encrypt functionality e.g. to persist an encrypted TiddlyWiki.  
