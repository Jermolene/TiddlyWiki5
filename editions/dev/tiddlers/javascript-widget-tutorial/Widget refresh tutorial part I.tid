created: 20190201232847949
modified: 20190216191049850
tags: 
title: Widget refresh tutorial part I
type: text/vnd.tiddlywiki

But what if we want to display dynamic content? How can we display information and keep it up to date as it changes? Let's display the content of a tiddler field.

The [[tiddlerfield-norefresh.js]] which defines the `tiddlerfield` widget is almost the same as [[hello.js]] except for this part:

```javascript
MyWidget.prototype.render = function(parent,nextSibling) {
	this.parentDomNode = parent;
	var text = this.wiki.getTiddlerText("test", "<empty>")
	var textNode = this.document.createTextNode(text);
	parent.insertBefore(textNode,nextSibling);
	this.domNodes.push(textNode);
};
```

Instead of creating the text dom node from a static string, the text field of the `test` tiddler is used. This is similar to using the view widget like this:  `<$view tiddler="test"/>`

Here's how it looks (see [[Widget refresh demo I]] to look at the code):

{{Widget refresh demo I}}

Notice if you change the text in the input box, the output from the `tiddlerfield` widget doesn't change, but the output of the `view` widget does. Only after the ''Force refresh'' button is clicked does the output of `tiddlerfield` update to match the input box contents.

What's going on here? The render method of the widget code is only called by tiddlywiki core when the widget is first created. After that, it isn't called again unless the widget is completely destroyed and then created again. 

The code for that refresh button looks like this:

```
<$button set="!!test" setTo="hello">Refresh</$button>
```

When that button is clicked the field `test` in the containing tiddler is modified and it causes the display of that tiddler to be recreated from scratch.

This recreation takes place because the tiddlywiki ~ViewWidget which is displaying the tiddler is properly written to handle automatic refreshes.

Our widget does not support automatic refresh and it won't until a `refresh` method is implemented.

The `view` widget stays in sync with the input box because it has a properly implemented `refresh` method.

See the next example for an implementation of the `refresh` method for the `tiddlerfield` widget.
