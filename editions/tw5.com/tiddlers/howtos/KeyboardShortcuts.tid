created: 20140526204527418
modified: 20160610082117953
tags: Features [[Working with TiddlyWiki]] Keyboard
title: KeyboardShortcuts
type: text/vnd.tiddlywiki

!!! Keyboard shortcuts are available for common editing operations in the Text Editor and for actions like "New Tiddler":

* Confirming changes to the draft tiddler containing the keyboard focus (defaults to <kbd>ctrl-Enter</kbd>
* Abandoning changes to the draft tiddler containing the keyboard focus (defaults to <kbd>escape</kbd>)
* Formatting operations from the tiddler editing toolbar (see the tooltips)
* <<.from-version 5.1.14>> Adding Tags in the Editor (hitting <kbd>Enter</kbd>)
* <<.from-version 5.1.18>> Creating a new Tiddler (defaults to <kbd>alt-N</kbd>) or a new Journal (defaults to <kbd>alt-J</kbd>) and other custom actions

<br>

<<.tip """The current shortcuts can be inspected and customised in the "Keyboard Shortcuts" tab of the [[control panel|$:/ControlPanel]] {{$:/core/images/options-button}}""">>

<br>


!!! How to add global keyboard shortcuts

* Create a tiddler with the prefix `$:/config/ShortcutInfo/` and a descriptive suffix as title. That suffix will be used to access the keyboard shortcut
* You can put a description in the text field that will be shown in the ~ControlPanel
** EXAMPLE: `$:/config/ShortcutInfo/new-custom-tiddler`
* Create another tiddler and put the suffix you chose for the ~ShortcutInfo tiddler into a field named ''key'' - surrounded by `((` and `))`
** EXAMPLE: `key : ((new-custom-tiddler))`
* The text field of this Tiddler can hold the actions you want to be triggered when the key-combination (we define that in the last step) gets detected
* Add the tag {{$:/tags/KeyboardShortcut||$:/core/ui/TagTemplate}}
* The key combination to trigger the newly defined actions can now be set in the ~KeyboardShortcuts Tab of the $:/ControlPanel

<br>

<<.tip """To be able to trigger actions that need the `navigator widget` for message-handling, the actions need to be wrapped inside a ''navigator widget instance'':""">>


```
<$navigator story="$:/StoryList" history="$:/HistoryList">
Actions
</$navigator>

```

!!!The actions handled by the navigator widget are mainly actions that interact with the Story-List:

* Some actions triggered by the <<.wlink "ActionSendMessageWidget">> widget
** <<.clink `tm-navigate` "WidgetMessage: tm-navigate">>
** <<.clink `tm-new-tiddler` "WidgetMessage: tm-new-tiddler">>
** <<.clink `tm-edit-tiddler` "WidgetMessage: tm-edit-tiddler">>
** <<.clink `tm-close-tiddler` "WidgetMessage: tm-close-tiddler">>
** <<.clink `tm-cancel-tiddler` "WidgetMessage: tm-cancel-tiddler">>
** <<.clink `tm-save-tiddler` "WidgetMessage: tm-save-tiddler">>
** <<.clink `tm-close-all-tiddlers` "WidgetMessage: tm-close-all-tiddlers">>
** <<.clink `tm-close-other-tiddlers` "WidgetMessage: tm-close-other-tiddlers">>
** <<.clink `tm-import-tiddlers` "WidgetMessage: tm-import-tiddlers">>
** <<.clink `tm-perform-import` "WidgetMessage: tm-perform-import">>
** <<.clink `tm-fold-tiddler` "WidgetMessage: tm-fold-tiddler">>
** <<.clink `tm-fold-other-tiddlers` "WidgetMessage: tm-fold-other-tiddlers">>
** <<.clink `tm-fold-all-tiddlers` "WidgetMessage: tm-fold-all-tiddlers">>
** <<.clink `tm-unfold-all-tiddlers` "WidgetMessage: tm-unfold-all-tiddlers">>
* The <<.wlink "ActionNavigateWidget">> widget
