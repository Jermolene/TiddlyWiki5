caption: decodebase64
op-input: a [[selection of titles|Title Selection]]
op-output: the input with base 64 decoding applied
op-suffix: optional: `text` to produce text output, `urlsafe` for URL-safe input
op-parameter: 
op-parameter-name: 
op-purpose: apply base 64 decoding to a string
tags: [[Filter Operators]] [[String Operators]]
title: decodebase64 Operator
type: text/vnd.tiddlywiki
from-version: 5.2.6

See Mozilla Developer Network for details of [[base 64 encoding|https://developer.mozilla.org/en-US/docs/Glossary/Base64]]. TiddlyWiki uses [[library code from @nijikokun|https://gist.github.com/Nijikokun/5192472]] to handle the conversion.

The input strings must be base64 encoded. The output strings are binary data.

The optional `text` suffix, if present, causes the output string to be interpreted as UTF-8 encoded bytes instead of binary data. This means that an extra UTF-8 decoding step will be added before the base64 output is produced. (If you don't know what that means, just remember that the `text` suffix should be used if you're decoding base64 that was produced by <<.op "encodebase64:text">>, while it should be omitted if you're decoding base64 that came from somewhere else).

The optional `urlsafe` suffix, if present, causes the decoder to assume that the base64 input uses `-` and `_` instead of `+` and `/` for the 62nd and 63rd characters of the base64 "alphabet", which is usually referred to as "URL-safe base64" or "bae64url".

<<.operator-examples "decodebase64">>
