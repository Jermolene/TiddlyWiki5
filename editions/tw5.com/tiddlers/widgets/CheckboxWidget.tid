caption: checkbox
created: 20131024141900000
modified: 20201109090732190
colors: red orange yellow
tags: Widgets
title: CheckboxWidget
type: text/vnd.tiddlywiki

! Introduction

The checkbox widget displays an HTML `<input type="checkbox">` element that is dynamically bound to either:

* the presence or absence of a specified tag on a specified tiddler
* the value of a specified field of a specified tiddler

! Content and Attributes

The content of the `<$checkbox>` widget is displayed within an HTML `<label>` element immediately after the checkbox itself. This means that clicking on the content will toggle the checkbox.

|!Attribute |!Description |
|tiddler |Title of the tiddler to manipulate (defaults to the [[current tiddler|Current Tiddler]]) |
|tag |The name of the tag to which the checkbox is bound |
|invertTag |When set to ''yes'', flips the tag binding logic so that the absence of the tag causes the checkbox to be checked  |
|field |The name of the field to which the checkbox is bound |
|fieldMode |<<.from-version "5.1.24">> Optional, turns on field list mode if set to "list". Requires //field// to be defined |
|index|<<.from-version "5.1.14">> The index of the //tiddler//, a [[DataTiddler|DataTiddlers]], to which the checkbox is bound<<.tip "be sure to set the //tiddler// correctly">>|
|checked |The value of the field corresponding to the checkbox being checked |
|unchecked |The value of the field corresponding to the checkbox being unchecked |
|default |The default value to use if the field is not defined |
|class |The class that will be assigned to the label element |
|actions |<<.from-version "5.1.14">> A string containing ActionWidgets to be triggered when the status of the checkbox changes (whether it is checked or unchecked) |
|uncheckactions |<<.from-version "5.1.16">> A string containing ActionWidgets to be triggered when the checkbox is unchecked |
|checkactions |<<.from-version "5.1.20">> A string containing ActionWidgets to be triggered when the checkbox is checked |
|disabled|<<.from-version "5.1.23">> Optional, disables the checkbox if set to "yes". Defaults to "no"|

!! Tag Mode

Using the checkbox widget in tag mode requires the ''tag'' attribute to specify the name of the tag. The ''tiddler'' attribute specifies the tiddler to target, defaulting to the current tiddler if not present.

This example creates a checkbox that flips the ''done'' tag on the current tiddler:

<<wikitext-example-without-html """<$checkbox tag="done"> Is it done?</$checkbox>""">>

!! Field Mode

Using the checkbox widget in field mode requires the ''field'' attribute to specify the name of the field. The ''checked'' and ''unchecked'' attributes specify the values to be assigned to the field to correspond to its checked and unchecked states respectively. The ''default'' attribute is used as a fallback value if the field is not defined.

This example creates a checkbox that is checked if the field ''status'' is equal to ''open'' and unchecked if the field is equal to ''closed''. If the field is undefined then it defaults to ''closed'', meaning that the checkbox will be unchecked if the ''status'' field is missing.

<<wikitext-example-without-html """<$checkbox field="status" checked="open" unchecked="closed" default="closed"> Is it open?</$checkbox><br>''status:'' {{!!status}}""">>

!! Field List Mode

Using the checkbox widget in field mode requires the ''fieldMode'' attribute to be "list", and the ''field'' attribute to specify the name of the field. The ''checked'' attribute specifies the value to be added to (or removed from) the list to correspond to its checked and unchecked states respectively. If ''checked'' is empty but ''unchecked'' is set (to a non-empty value), then the logic will be inverted so that the checkbox will be checked if the value is missing from the list, or unchecked if the value is present. Finally, if both ''checked'' and ''unchecked'' are present, the checkbox will work like a toggle, replacing the ''checked'' value with the ''unchecked'' value and vice-versa.

The ''default'' attribute is used as a fallback for the checkbox state if the field is not defined, or if neither the ''checked'' nor ''unchecked'' value are found in the list.

This example creates a checkbox that is checked if the list field named ''colors'' contains ''red'' and unchecked if the field contains ''green''. If the field is undefined, or if neither ''red'' nor ''green'' appears in the field, then it defaults to ''green'', meaning that the checkbox will be unchecked.

<<wikitext-example-without-html """<$checkbox field="colors" fieldMode="list" checked="red" unchecked="green" default="green"> Is it red?</$checkbox><br>''colors:'' {{!!colors}}""">>

!! Index Mode

To use the checkbox widget in index mode set the ''index'' attribute to the index of a [[DataTiddler|DataTiddlers]]. The ''checked'' and ''unchecked'' attributes specify the values to be assigned to the index and correspond to its checked and unchecked states respectively. The ''default'' attribute is used as a fallback value if the index is undefined.

The example below creates a checkbox that is checked if the index by the name of this tiddler in the tiddler ExampleData is equal to ''selected'' and unchecked if the index is an empty string. If the index is undefined then it defaults to an empty string, meaning the checkbox will be unchecked if the index is missing.

<$macrocall $name="wikitext-example-without-html" src="""<$checkbox tiddler="ExampleData" index=<<currentTiddler>> checked="selected" unchecked="" default=""> Selected?</$checkbox>"""/>
