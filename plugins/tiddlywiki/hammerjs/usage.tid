title: $:/plugins/tiddlywiki/hammerjs/usage

The ''swipe'', ''press'', ''pan'', ''tap'' and ''pinch'' widgets included in this plugin enable users of creating html elements that trigger user-actions when the corresponding gesture gets executed on the element - or, in case of the pan and pinch widgets, in addition to triggering user-actions, populate a state tiddler with coordinates and values of the element itself and the gesture

The pan widget stores the coordinates of the element and the relative and absolute coordinates of the pointer in $:/state/pan or a user-defined tiddler

The pinch widget stores the scale value and the angle of the detected rotation of the pinch gesture in $:/state/pinch or a user-defined tiddler

With those values users can position elements following the mouse, create custom sliders or create image galleries with pinch-zoomable and rotatable images, in combination with [ext[css calculations|https://www.w3schools.com/cssref/func_calc.asp]] and/or tiddlywiki plugins that allow number-crunching


!!Swipe Widget



!!Press Widget



!!Pan Widget

|!Attribute |!Description |!Optional? |h
|targets |the css class of the target element(s) |no |
|startactions |the actions that should be performed when panning starts |yes |
|endactions |the actions that should be performed when panning ends |yes |
|repeatactions |actions that are repeatedly performed while panning |yes |
|state |optional tiddler where values get stored - default: $:/state/pan |yes |
|pointers |the number of pointers needed for the swipe gesture - default: 1 |yes |
|threshold |a minimal distance in px required before recognizing the pan gesture - default: 0 |yes |
|decimals |the number of decimal points for the stored values in the state tiddler - default: 0 |yes |


As an example, an element with the class `tc-test-class` is made pannable by 

```
<$pan targets="tc-test-class">
<div class="tc-test-class"/>
</$pan>

```

When users click this element, hold the mouse and move it, the tiddler $:/state/pan gets populated with the pan-values

Those values can be used to position that same element using css in a `Stylesheet Tiddler` - note that the values from the state tiddler can be transcluded within the css `calc()` function:

```css
.tc-test-class {
	width: 70px;
	height: 70px;
	background-color: #f4f4f4;
	position: absolute;
	left: calc({{$:/state/pan!!absolute-x}}px - 35px);
	top: calc({{$:/state/pan!!absolute-y}}px - 35px)
}

```


!!Tap Widget



!!Pinch Widget
